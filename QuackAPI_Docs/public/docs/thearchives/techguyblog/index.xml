<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech Guy Blog (Archive) on m2s docs</title>
    <link>http://localhost:1313/docs/thearchives/techguyblog/</link>
    <description>Recent content in Tech Guy Blog (Archive) on m2s docs</description>
    <generator>Hugo</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 15 Feb 2024 21:08:02 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/docs/thearchives/techguyblog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTPS Does Not Mean Safe</title>
      <link>http://localhost:1313/docs/thearchives/techguyblog/httpsnotmeansafe/</link>
      <pubDate>Thu, 15 Feb 2024 21:08:02 +0000</pubDate>
      <guid>http://localhost:1313/docs/thearchives/techguyblog/httpsnotmeansafe/</guid>
      <description>&lt;p&gt;APR 16, 2019&lt;/p&gt;&#xA;&lt;p&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;This post was Spurred on by a discussion on website safety and how to teach young people how to tell if a website is safe. I Somewhat hyperbolically said no website is safe and that the green padlock / HTTPs basically means nothing.&#xA;The longer version is a bit more complex than this and i will go into it in this post.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-are-the-types-of-ssl-certificates&#34;&gt;What are the types of SSL Certificates? &lt;a href=&#34;#what-are-the-types-of-ssl-certificates&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This article (External Link) gives a more in depth explanation of each type of SSL Cert### DV – Domain Validation&lt;/p&gt;</description>
    </item>
    <item>
      <title>Get Logged In Users</title>
      <link>http://localhost:1313/docs/thearchives/techguyblog/get-logged-in-users/</link>
      <pubDate>Sun, 20 Jan 2019 12:08:24 +0000</pubDate>
      <guid>http://localhost:1313/docs/thearchives/techguyblog/get-logged-in-users/</guid>
      <description>&lt;p&gt;Script a ‘week’ 00001111&lt;br&gt;&#xA;This script will allow you remotely to get the users logged in to windows computers based of a computer name&lt;br&gt;&#xA;It will also ask you for the username of a specific person and pop their location up.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;7f04a18&#34; class=&#34;language-powershell &#34;&gt;&#xD;&#xA;  &lt;code&gt;CLS&#xD;&#xA;$col = 1 # For text colour, unneeded but it makes it a bit easier to prase&#xD;&#xA;$COMPUTERS = Get-ADComputer -Filter &amp;#34;Name -like &amp;#39;ComputerName-*&amp;#39;&amp;#34; | select -expandproperty Name&#xD;&#xA;Write-Host &amp;#34;Please enter the USERNAME Of the student you want to find&amp;#34; -ForegroundColor red&#xD;&#xA;$FindUser = Read-Host&#xD;&#xA;Foreach ($computer in $COMPUTERS){&#xD;&#xA;$q = (qwinsta /server:$computer | foreach { (($_.trim() -replace &amp;#34;\s&amp;#43;&amp;#34;,&amp;#34;,&amp;#34;))} | ConvertFrom-Csv)&#xD;&#xA;foreach ($item in $q) {&#xD;&#xA;    $ID = $item | Select-Object -expand id &#xD;&#xA;    $user = $item | Select-Object -expand username&#xD;&#xA;       $computer = &amp;#34;$computer&amp;#34;.ToUpper()&#xD;&#xA;       try {&#xD;&#xA;           $FirstName = get-aduser $User | select -expandproperty GIVENName&#xD;&#xA;           $lastname = get-aduser $User | select -expandproperty surname&#xD;&#xA;           $form = get-aduser $User -Properties * | select -expandproperty description&#xD;&#xA;           $year = get-aduser $User -Properties *| select -expandproperty office&#xD;&#xA;           $Sam = get-aduser $User | select -expandproperty samaccountname&#xD;&#xA;           $name = $firstname &amp;#43; &amp;#34; &amp;#34; &amp;#43; $lastname &amp;#43; &amp;#34; ($year$form)&amp;#34; &amp;#43; &amp;#34; $sam&amp;#34;&#xD;&#xA;           if ($FindUser -contains $sam){&#xD;&#xA;                Write-Host $name &amp;#34;Is on $computer&amp;#34; -ForegroundColor red&#xD;&#xA;                msg * $name &amp;#34;Is on $computer&amp;#34;&#xD;&#xA;           } &#xD;&#xA;           If ($col -eq 1){&#xD;&#xA;               Write-host $name &amp;#34;Is on $computer&amp;#34; -foregroundColor Blue&#xD;&#xA;               $col = 2&#xD;&#xA;           }elseif ($col -eq 2){&#xD;&#xA;                Write-host $name &amp;#34;Is on $computer&amp;#34; -foregroundColor Green&#xD;&#xA;                $col = 3&#xD;&#xA;           }else{&#xD;&#xA;                Write-host $name &amp;#34;Is on $computer&amp;#34; -foregroundColor Red&#xD;&#xA;                $col = 1&#xD;&#xA;           }&#xD;&#xA;                 }&#xD;&#xA;       catch {&#xD;&#xA;           [exception] | out-null&#xD;&#xA;    } &#xD;&#xA;}&#xD;&#xA;}&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;PS Version&lt;/strong&gt; – Test on 5.0 Should work on 6.0&lt;br&gt;&#xA;&lt;strong&gt;OS&lt;/strong&gt; – Script tested to run from Windows 10, against 7 and 10&lt;br&gt;&#xA;&lt;strong&gt;Administrative Credentials required&lt;/strong&gt; – Yes, and on remote machines&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spam &amp;#038; Scams</title>
      <link>http://localhost:1313/docs/thearchives/techguyblog/spam-scams/</link>
      <pubDate>Tue, 08 Jan 2019 21:06:50 +0000</pubDate>
      <guid>http://localhost:1313/docs/thearchives/techguyblog/spam-scams/</guid>
      <description>&lt;p&gt;Just some screenshots of Scam and Spam Messages, for you to be aware of and in some cases laugh at.&lt;br&gt;&#xA;If you have any you want adding, send them in.&lt;/p&gt;&#xA;&lt;p&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fake Key Gen</title>
      <link>http://localhost:1313/docs/thearchives/techguyblog/fake-key-gen/</link>
      <pubDate>Sun, 14 Oct 2018 14:58:50 +0000</pubDate>
      <guid>http://localhost:1313/docs/thearchives/techguyblog/fake-key-gen/</guid>
      <description>&lt;p&gt;Script a ‘week’ 00001110&lt;/p&gt;&#xA;&lt;p&gt;This script allows you to generate a large amount of steam like, Fake keys. This is designed for game devs to give a ton of fake keys to scammers to waste their time.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;61f8f4e&#34; class=&#34;language-powershell &#34;&gt;&#xD;&#xA;  &lt;code&gt;####Script by Chris of TECHGUYBLOG.CO.UK (C) 2018&#xD;&#xA;####Tested on PS 5.0 AND Should work on 6.0 &#xD;&#xA;.SYNOPSIS&#xD;&#xA;This file creates a list of fake steam sytax keys for sending to scammers and morons &#xD;&#xA;.DESCRIPTION&#xD;&#xA;This file creates a list of fake steam sytax keys for sending to scammers and morons. &#xD;&#xA;It gets 5 numbers or letters and exports them in a CSV To a location of your desision in the format&#xD;&#xA;WLGSV-RK9EB-N5H36&#xD;&#xA;You can change the ammount of chars / letters by chaning $charcount&#xD;&#xA;.INFO&#xD;&#xA;You need R/W Permissions for the folder you are saving in, and the file needs to exsist&#xD;&#xA;#&amp;gt;&#xD;&#xA;$CharCount = 5&#xD;&#xA;$RunAmmount = Read-Host &amp;#34;How many codes do you want to create&amp;#34;&#xD;&#xA;$CSVLocation = Read-Host &amp;#34;Where do you want the CSV To Go&amp;#34;&#xD;&#xA;$CSVName = Read-Host &amp;#34;What do you want the csv to be called&amp;#34;&#xD;&#xA;for ($i=0; $i -le $RunAmmount; $i&amp;#43;&amp;#43;){ #Create X ammount of keys&#xD;&#xA;    $a = -join ((65..90) &amp;#43; (48..57) | Get-Random -Count $CharCount | % {[char]$_}) #Sets a to 5 random letters or numbers&#xD;&#xA;    $b = -join ((65..90) &amp;#43; (48..57) | Get-Random -Count $CharCount | % {[char]$_}) #Sets b to 5 random letters or numbers&#xD;&#xA;    $c = -join ((65..90) &amp;#43; (48..57) | Get-Random -Count $CharCount | % {[char]$_}) #Sets c to 5 random letters or numbers&#xD;&#xA;    write-host $a-$b-$c -ForegroundColor Green #Prints the fake keys to the screen&#xD;&#xA;    &amp;#34;$a-$b-$c&amp;#34; | out-file &amp;#34;$CSVLocation\$CSVNAME.csv&amp;#34; -Append #Dumps the keys in a csv&#xD;&#xA;}&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;PS Version&lt;/strong&gt; – Test on 5.0 Should work on 6.0&lt;br&gt;&#xA;&lt;strong&gt;OS&lt;/strong&gt; – Script tested on windows 10&lt;br&gt;&#xA;&lt;strong&gt;Administrative Credentials required&lt;/strong&gt; – NO, However R/W permission needed in directory you select&lt;br&gt;&#xA;&lt;strong&gt;Changes needed?&lt;/strong&gt; – Optional change charnumber to fit syntax you need for your fake keys&lt;/p&gt;</description>
    </item>
    <item>
      <title>Remove all windows 10 apps</title>
      <link>http://localhost:1313/docs/thearchives/techguyblog/remove-all-windows-10-apps/</link>
      <pubDate>Sun, 25 Mar 2018 15:22:03 +0000</pubDate>
      <guid>http://localhost:1313/docs/thearchives/techguyblog/remove-all-windows-10-apps/</guid>
      <description>&lt;p&gt;PS One Liners 00000001&lt;br&gt;&#xA;This one line below will remove all none system critical windows 10 apps.&lt;br&gt;&#xA;This includes the windows store, calculator etc.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;6071e08&#34; class=&#34;language-powershell &#34;&gt;&#xD;&#xA;  &lt;code&gt;Get-AppxPackage -allusers | Remove-AppxPackage&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;p&gt;POTENTIALLY DESTRUCTIVE&lt;br&gt;&#xA;&lt;strong&gt;PS Version&lt;/strong&gt; – Test on 5.0 Should work on 6.0&lt;br&gt;&#xA;&lt;strong&gt;OS&lt;/strong&gt; – Script test on windows 10 – May work on windows 8&lt;br&gt;&#xA;&lt;strong&gt;Administrative Credentials required&lt;/strong&gt; – Yes&lt;/p&gt;&#xA;&lt;p&gt;————–&lt;br&gt;&#xA;PS One Liners is an occasional post of one line of useful code to be used.&lt;/p&gt;</description>
    </item>
    <item>
      <title>House Cleaning</title>
      <link>http://localhost:1313/docs/thearchives/techguyblog/house-cleaning/</link>
      <pubDate>Sun, 25 Mar 2018 15:16:11 +0000</pubDate>
      <guid>http://localhost:1313/docs/thearchives/techguyblog/house-cleaning/</guid>
      <description>&lt;p&gt;Script a week&lt;br&gt;&#xA;This POTENTIALLY DESTRUCTIVE SCRIPT&lt;br&gt;&#xA;Removes all Windows 10 apps, various junkie files from the c drive then cleans up the system image&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;78cf0e6&#34; class=&#34;language-powershell &#34;&gt;&#xD;&#xA;  &lt;code&gt;&#xD;&#xA;####Script by Chris of TECHGUYBLOG.CO.UK (C) 2018&#xD;&#xA;####Tested on PS 5.0 AND Should work on 6.0 &#xD;&#xA;####  POTENTIALLY DESTRUCTIVE SCRIPT &#xD;&#xA;#### THIS SCRIPT ALSO REMOVES ALL WIN 10 APPS &#xD;&#xA;#### This script removes various files from the C drive of windows machines&#xD;&#xA;#### It Then cleans up the system install image &#xD;&#xA;#region date&#xD;&#xA;Get-AppxPackage -allusers | Remove-AppxPackage ####&#xD;&#xA;$min = Get-Date &amp;#39;08:00&amp;#39;&#xD;&#xA;$max = Get-Date &amp;#39;17:30&amp;#39;&#xD;&#xA;$now = Get-Date&#xD;&#xA;#endregion&#xD;&#xA;#region clean&#xD;&#xA;Remove-Item -path c:\temp\ -Recurse -Force&#xD;&#xA;Remove-Item  c:\users\* -Force&#xD;&#xA;Remove-Item -path c:\windows\temp\ -Recurse -Force&#xD;&#xA;Remove-Item -path c:\windows.old\ -Recurse -Force&#xD;&#xA;Remove-Item -path &amp;#34;c:\windows\Software Distribution.old\&amp;#34; -Recurse -Force&#xD;&#xA;Remove-item -path &amp;#34;C:\Windows\ServiceProfiles\LocalService\AppData\Local\FontCache\&amp;#34; -Include FontCache-S-*.dat -Recurse -Force&#xD;&#xA;#endregion&#xD;&#xA;Remove-Item  c:\windows.old\ -Force&#xD;&#xA;Remove-Item &amp;#34;c:\windows\Software Distribution.old\&amp;#34; -Force&#xD;&#xA;#endregion &#xD;&#xA;#region CHECK FOR TIME, THEN REMOVE OLD IMAGES&#xD;&#xA;if (((!($min.TimeOfDay -le $now.TimeOfDay -and $max.TimeOfDay -ge $now.TimeOfDay))) &#xD;&#xA;{&#xD;&#xA;    Dism.exe /online /Cleanup-Image /StartComponentCleanup ## cleans up image&#xD;&#xA;    Dism.exe /online /Cleanup-Image /StartComponentCleanup /ResetBase ##This gets rid of superseded windows images&#xD;&#xA;    Dism.exe /online /Cleanup-Image /SPSuperseded ##More old superseded stuff removal&#xD;&#xA;&#xD;&#xA;    msg * &amp;#34;Cleanup Ran&amp;#34;&#xD;&#xA;}&#xD;&#xA;elseif ($min.TimeOfDay -le $now.TimeOfDay -and $max.TimeOfDay -ge $now.TimeOfDay)&#xD;&#xA;    {&#xD;&#xA;        msg * &amp;#34;not run due to time&amp;#34;&#xD;&#xA;    }&#xD;&#xA;else&#xD;&#xA;{ &#xD;&#xA;    #DO NOTHING&#xD;&#xA;}&#xD;&#xA;#endregion&#xD;&#xA;Clear-RecycleBin -Force&#xD;&#xA;gpupdate /force&#xD;&#xA;##End Of House Cleaning Files&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt; – POTENTIALLY DESTRUCTIVE SCRIPT&lt;/p&gt;</description>
    </item>
    <item>
      <title>Switch Pinger</title>
      <link>http://localhost:1313/docs/thearchives/techguyblog/switch-pinger/</link>
      <pubDate>Wed, 21 Mar 2018 22:22:47 +0000</pubDate>
      <guid>http://localhost:1313/docs/thearchives/techguyblog/switch-pinger/</guid>
      <description>&lt;p&gt;Script a week 00000110&lt;br&gt;&#xA;This script allows you to ping a range of devices (in a set IP range), useful for pinging things such as network switches&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;08d0b52&#34; class=&#34;language-powershell &#34;&gt;&#xD;&#xA;  &lt;code&gt;####Script by Chris of TECHGUYBLOG.CO.UK (C) 2018&#xD;&#xA;####Tested on PS 5.0 AND Should work on 6.0 &#xD;&#xA;####Script allows you to ping an IPrange of devices &#xD;&#xA;[uint16]$NETswitch = read-host &amp;#34;Please enter low end of range&amp;#34;&#xD;&#xA;[uint16]$top = read-host &amp;#34;Please enter top of range&amp;#34;&#xD;&#xA;while ($NETswitch -lt $top) &#xD;&#xA;    {&#xD;&#xA;    If (test-Connection 192.168.1.$NETswitch -Count 2 -Quiet ) &#xD;&#xA;        {   &#xD;&#xA;        write-host &amp;#34;192.168.1.$NETSwitch is Pinging &amp;#34;   -ForegroundColor Green&#xD;&#xA;        } &#xD;&#xA;        else  &#xD;&#xA;        {&#xD;&#xA;        write-host &amp;#34;10.24.48.$NETSwitch not pinging&amp;#34;  -ForegroundColor Red&#xD;&#xA;        }&#xD;&#xA;        $NETswitch = $NETswitch &amp;#43; 1      &#xD;&#xA;    }&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;PS Version&lt;/strong&gt; – Test on 5.0 Should work on 6.0&lt;br&gt;&#xA;&lt;strong&gt;OS&lt;/strong&gt; – Script run on windows 10, target device OS Shouldn’t matter&lt;br&gt;&#xA;&lt;strong&gt;Administrative Credentials required&lt;/strong&gt; – No&lt;br&gt;&#xA;&lt;strong&gt;Changes needed?&lt;/strong&gt; – Change the IP range 192.168.1. To the range, you wish to ping. Must be /24 address&lt;/p&gt;</description>
    </item>
    <item>
      <title>Get Disk space of remote computer in OU</title>
      <link>http://localhost:1313/docs/thearchives/techguyblog/get-disk-space-of-remote-computer-in-ou/</link>
      <pubDate>Wed, 07 Mar 2018 22:06:01 +0000</pubDate>
      <guid>http://localhost:1313/docs/thearchives/techguyblog/get-disk-space-of-remote-computer-in-ou/</guid>
      <description>&lt;p&gt;Script a week 00000101&lt;br&gt;&#xA;This script allows you to get the free space on disk C and give you an option for a second drive&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;828a81d&#34; class=&#34;language-powershell &#34;&gt;&#xD;&#xA;  &lt;code&gt;####Script by Chris of TECHGUYBLOG.CO.UK (C) 2018&#xD;&#xA;####Tested on PS 5.0 AND 6.0&#xD;&#xA;####The script below will allow you to get the free disk space on remote machines in an OU&#xD;&#xA;####And an second drive&#xD;&#xA;&#xD;&#xA;$comp = Get-ADComputer -Filter * -SearchBase &amp;#34;OU=Servers,OU=School,OU=CO,OU=UK&amp;#34;| select -expand name&#xD;&#xA;Get-WMIObject Win32_Logicaldisk -filter &amp;#34;deviceid=&amp;#39;C:&amp;#39;&amp;#34; -ComputerName $comp | &#xD;&#xA;Select PSComputername,DeviceID, &#xD;&#xA;@{Name=&amp;#34;SizeGB&amp;#34;;Expression={$_.Size/1GB -as [int]}},&#xD;&#xA;@{Name=&amp;#34;FreeGB&amp;#34;;Expression={[math]::Round($_.Freespace/1GB,2)}}&#xD;&#xA;&#xD;&#xA;##and d drive&#xD;&#xA;&#xD;&#xA;#B&#xD;&#xA;Get-WMIObject Win32_Logicaldisk -filter &amp;#34;deviceid=&amp;#39;D:&amp;#39;&amp;#34; -ComputerName $comp | &#xD;&#xA;Select PSComputername,DeviceID, &#xD;&#xA;@{Name=&amp;#34;SizeGB&amp;#34;;Expression={$_.Size/1GB -as [int]}},&#xD;&#xA;@{Name=&amp;#34;FreeGB&amp;#34;;Expression={[math]::Round($_.Freespace/1GB,2)}}&#xD;&#xA;#B&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;PS Version&lt;/strong&gt; – Test on 5.0 &amp;amp; 6.0&lt;br&gt;&#xA;&lt;strong&gt;OS&lt;/strong&gt; – Tested on Windows 7 &amp;amp; Windows 10, with the script being run on a windows 10 machine&lt;br&gt;&#xA;&lt;strong&gt;Administrative Credentials required&lt;/strong&gt; – Yes&lt;br&gt;&#xA;&lt;strong&gt;Changes needed?&lt;/strong&gt; – Change OU For your ORG, Change or remove the second section for extra drives (In between the B Comments). Note you can copy the section between the b comments and duplicate for as many drives as needed. Just replace the device ID Letter for the drive.&lt;br&gt;&#xA;&lt;strong&gt;Additional Things&lt;/strong&gt; – RPC Turned on&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ping a list of computers</title>
      <link>http://localhost:1313/docs/thearchives/techguyblog/ping-a-list-of-computers/</link>
      <pubDate>Wed, 07 Mar 2018 21:53:35 +0000</pubDate>
      <guid>http://localhost:1313/docs/thearchives/techguyblog/ping-a-list-of-computers/</guid>
      <description>&lt;p&gt;Script a week 00000100&lt;br&gt;&#xA;This Script is to ping a list of computers with a Certain name&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;fa6f781&#34; class=&#34;language-powershell &#34;&gt;&#xD;&#xA;  &lt;code&gt;####Script by Chris of TECHGUYBLOG.CO.UK (C) 2018&#xD;&#xA;####Tested on PS 5.0 AND 6.0&#xD;&#xA;####The script below will allow you ping computers with a certain name&#xD;&#xA;####Or with a certain naming convention &#xD;&#xA;$compname = read-host &amp;#34;Enter computname Do not include * For wild card. it is added automactily: IE PCNAME&amp;#34;&#xD;&#xA;$computers = Get-ADComputer -Filter &amp;#34;Name -like &amp;#39;$compname*&amp;#39;&amp;#34; | &#xD;&#xA;select-object -expandproperty name&#xD;&#xA;ForEach ($computer in $computers)`&#xD;&#xA;{&#xD;&#xA;  ping $computer&#xD;&#xA;}&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;PS Version&lt;/strong&gt; – Test on 5.0 &amp;amp; 6.0&lt;br&gt;&#xA;&lt;strong&gt;OS&lt;/strong&gt; – Tested on Windows 7 &amp;amp; Windows 10, with the script being run on a windows 10 machine&lt;br&gt;&#xA;&lt;strong&gt;Administrative Credentials required&lt;/strong&gt; – Yes&lt;br&gt;&#xA;&lt;strong&gt;Changes needed?&lt;/strong&gt; – Modifying comments to suit your org needs&lt;/p&gt;</description>
    </item>
    <item>
      <title>Remote shutdown / Restart</title>
      <link>http://localhost:1313/docs/thearchives/techguyblog/remote-shutdown/</link>
      <pubDate>Sun, 25 Feb 2018 14:50:47 +0000</pubDate>
      <guid>http://localhost:1313/docs/thearchives/techguyblog/remote-shutdown/</guid>
      <description>&lt;p&gt;Script a week – week 00000011&lt;br&gt;&#xA;This Is A Script To Remotely Restart Computers.&lt;br&gt;&#xA;WARNING THIS IS A &lt;strong&gt;POTENTIALLY DESTRUCTIVE ACTION,&lt;/strong&gt; RUNNING THIS SCRIPT INCORRECTLY COULD RESTART ALL MACHINES ON YOUR NETWORK INCLUDING SERVERS.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;6160f62&#34; class=&#34;language-powershell &#34;&gt;&#xD;&#xA;  &lt;code&gt;####Script by Chris of TECHGUYBLOG.CO.UK (C) 2018&#xD;&#xA;####Tested on PS 5.0 AND 6.0&#xD;&#xA;####The script below will allow you remotely restart computers with a certain name&#xD;&#xA;####Or with a certain naming convention &#xD;&#xA;####WARNING THIS IS A POTENTIALLY DESTRUCTIVE ACTION, &#xD;&#xA;####RUNNING THIS SCRIPT INCORRECTLY COULD SHUT DOWN ALL MACHINES ON YOUR NETWORK &#xD;&#xA;####INCLUDING SERVERS&#xD;&#xA;##&#xD;&#xA;$compname = read-host &amp;#34;Enter computname Do not include * For wild card. `&#xD;&#xA;it is added automactily::::: IE COMPNAME&amp;#34;&#xD;&#xA;$secs = read-host &amp;#34;enter how many seconds until restart&amp;#34;&#xD;&#xA;$computers = Get-ADComputer -Filter &amp;#34;Name -like &amp;#39;$compname*&amp;#39;&amp;#34; | `&#xD;&#xA;select-object -expandproperty name&#xD;&#xA;$msg =  &amp;#34;Your comupter will restart in $secs Seconds&amp;#34; &#xD;&#xA;ForEach ($computer in $computers) {&#xD;&#xA;    WRITE-HOST $computer&#xD;&#xA;    Invoke-WmiMethod `&#xD;&#xA;        -Path Win32_Process `&#xD;&#xA;        -Name Create `&#xD;&#xA;        -ArgumentList &amp;#34;msg * /time:$secs $msg&amp;#34; `&#xD;&#xA;        -ComputerName $computer&#xD;&#xA;        SHUTDOWN /r /f /m  $computer -t $secs -d UP:4:1&#xD;&#xA;}&#xD;&#xA;##&lt;/code&gt;&#xD;&#xA;  &lt;/pre&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;Replace /r with /s to shut down and not restart&lt;br&gt;&#xA;WARNING&lt;/strong&gt; – By running this with just a wildcard it will force close all programs on a machine and Restart it THIS INCLUDES SERVERS, Be careful when running.&lt;br&gt;&#xA;&lt;strong&gt;PS Version&lt;/strong&gt; – Test on 5.0 &amp;amp; 6.0&lt;br&gt;&#xA;&lt;strong&gt;OS&lt;/strong&gt; – Tested on Windows 7 &amp;amp; Windows 10, with the script being run on a windows 10 machine&lt;br&gt;&#xA;&lt;strong&gt;Administrative Credentials required&lt;/strong&gt; – Yes&lt;br&gt;&#xA;&lt;strong&gt;Changes needed?&lt;/strong&gt; – Modifying comments to suit your org needs&lt;br&gt;&#xA;&lt;strong&gt;Additional Things&lt;/strong&gt; – RPC Turned on&lt;/p&gt;</description>
    </item>
    <item>
      <title>Backblaze (Cloudbackup)</title>
      <link>http://localhost:1313/docs/thearchives/techguyblog/backblaze/</link>
      <pubDate>Sat, 03 Feb 2018 14:44:49 +0000</pubDate>
      <guid>http://localhost:1313/docs/thearchives/techguyblog/backblaze/</guid>
      <description>&lt;p&gt;Disclaimer / full discourse: By Using the referral link at the bottom of this post,&lt;br&gt;&#xA;or in the footer, i gain a months free backup.&lt;br&gt;&#xA;&lt;a href=&#34;https://secure.backblaze.com/r/019dif&#34; rel=&#34;external&#34; target=&#34;_blank&#34;&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&lt;svg width=&#34;16&#34; height=&#34;16&#34; viewBox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z&#34;/&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
